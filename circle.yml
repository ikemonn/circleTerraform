machine:
  environment:
    PATH: $HOME/.terraform:$PATH
    TERRAFORM_VERSION: 0.6.9
dependencies:
  cache_directories:
    - ~/.terraform
  pre:
    - |
      mkdir -p $HOME/.terraform
      if [ -z "$(ls -A $HOME/.terraform)" ]; then
        cd $HOME/.terraform
        wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
        unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
        rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      fi
test:
  pre:
    - |


  override:
    - |
      sh ./terraform_exec.sh
      # cd terraform/aws/evaluation/
      # export AWS_ACCESS_KEY_ID=${evaluation_AWS_ACCESS_KEY_ID}
      # export AWS_SECRET_ACCESS_KEY=${evaluation_AWS_SECRET_ACCESS_KEY}
      # export TF_VAR_aws_access_key=${AWS_ACCESS_KEY_ID}
      # export TF_VAR_aws_secret_key=${AWS_SECRET_ACCESS_KEY}
      # echo $TF_VAR_aws_access_key
      # printenv
      # terraform remote config -backend=S3 -backend-config="bucket=example-terraform-state" -backend-config="key=terraform.tfstate"
      # terraform remote pull
      # terraform plan
  post:
    - |
      # terraform remote push
deployment:
  production:
    branch: ikemonn
    commands:
      - |
        cd terraform/aws/evaluation/
        export AWS_ACCESS_KEY_ID=${evaluation_AWS_ACCESS_KEY_ID}
        export AWS_SECRET_ACCESS_KEY=${evaluation_AWS_SECRET_ACCESS_KEY}
        export TF_VAR_aws_access_key=${AWS_ACCESS_KEY_ID}
        export TF_VAR_aws_secret_key=${AWS_SECRET_ACCESS_KEY}
        terraform remote config -backend=S3 -backend-config="bucket=example-terraform-state" -backend-config="key=terraform.tfstate"
        terraform remote pull
        terraform apply
        terraform remote push
